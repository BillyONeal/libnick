on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ "review_requested", "ready_for_review" ]
  workflow_dispatch:
name: Build
permissions:
  id-token: write
  contents: read
jobs:
  build:
    name: "Build"
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - os: ubuntu-latest
          artifact: "Linux-x64.zip"
          mode: "Release"
          conan-install-cmd: conan install conanfile-linux.txt -s compiler.cppstd=20 --build missing
        - os: windows-latest
          artifact: "Windows-x64.zip"
          mode: "Release"
          conan-install-cmd: conan install conanfile-windows.txt -s compiler.cppstd=20 --build missing
      fail-fast: false
    steps:
      - name: "Checkout"  
        uses: actions/checkout@v3.5.0
        with:
          submodules: recursive
      - name: "Get Conan"
        uses: turtlebrowser/get-conan@main
      - name: "Create Conan Profile"
        run: conan profile detect --force
      - name: "Install Conan"
        run: ${{ matrix.config.conan-install-cmd }}
      - name: "CMake Load Cache"
        working-directory: /build
        run: cmake ..
      - name: "CMake Build"  
        run: cmake --build . --config ${{ matrix.config.mode }}
      - name: "CMake Install"
        run: cmake --install build --prefix instdir --strip
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ./${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}-${{ matrix.config.mode }}
